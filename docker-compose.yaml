version: "3.8"

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:latest
    depends_on:
      - kafka-1
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-1:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    command:
      - bash
      - -c
      - |
        #
        echo "Installing connector plugins"
        while : ; do
          confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.9.1
          if [ $? -eq 0 ] ; then
            break
          fi
          echo "Installing connector plugins failed, trying again" 
          sleep 5 
        done    
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run & 
        #
        echo "Waiting for Kafka Connect to start listening on localhost"
        while : ; do
          curl_status=$$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)
          echo -e $$(date) " Kafka Connect listener HTTP state: " $$curl_status " (waiting for 200)"
          if [ $$curl_status -eq 200 ] ; then
            break
          fi
          sleep 5 
        done
        #
        echo -e "Creating connector..."        
        curl -X POST -H "Content-Type: application/json" http://kafka-connect:8083/connectors --data '
          {
            "name": "mongo-sink",
            "config": {
              "connector.class"                : "com.mongodb.kafka.connect.MongoSinkConnector",
              "connection.uri"                 : "mongodb://user:password@mongo:27017/hotelsearches_db",
              "database"                       : "hotelsearches_db",
              "collection"                     : "hotel_availability_searches",
              "topics"                         : "hotel_availability_searches",
              "value.converter"                : "org.apache.kafka.connect.json.JsonConverter",
              "value.converter.schemas.enable" : "false"
            }
          }'
        sleep infinity

  mongo:
    image: docker.io/bitnami/mongodb:6.0
    depends_on:
      - kafka-1
      - kafka-connect
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-volume:/data/db
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongo
      MONGODB_USERNAME: user
      MONGODB_PASSWORD: password
      MONGODB_DATABASE: hotelsearches_db
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_KEY: replicasetkey
